{"ast":null,"code":"var _jsxFileName = \"/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js\",\n  _s = $RefreshSig$();\nimport { GithubAuthProvider, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = props => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async event => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      if (newAccount) {\n        let data = await createUserWithEmailAndPassword(authService, email, password);\n        console.log(\"createUserWithEmailAndPassword성공!\");\n        console.log(data);\n      } else {\n        //newAccount가 아니라면 sigIn이 되어야할탠데..\n        console.log(\"signInWithEmailAndPassword성공!\");\n        data = await signInWithEmailAndPassword(authService, email, password);\n        console.log(data);\n      }\n    } catch (error) {\n      //에러처리\n      // eslint-disable-next-line default-case\n      switch (error.code) {\n        case \"auth/weak-password\":\n          setError(\"비밀번호는 6자리 이상이어야 합니다\");\n          break;\n        case \"auth/invalid-email\":\n          setError(\"잘못된 이메일 주소입니다\");\n          break;\n        case \"auth/email-already-in-use\":\n          setError(\"이미 가입되어 있는 계정입니다\");\n          break;\n      }\n    }\n  };\n  const login = async () => {\n    try {\n      const curUserInfo = await signInWithEmailAndPassword(authService, email, password);\n      // console.log(curUserInfo);\n      setUser(curUserInfo.user);\n    } catch (err) {\n      setIsAppropriate(false);\n      // console.log(err.code);\n      /*\n      입력한 아이디가 없을 경우 : auth/user-not-found.\n      비밀번호가 잘못된 경우 : auth/wrong-password.\n      */\n    }\n  };\n\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider) // 팝업창 띄워서 로그인\n    .then(data => {\n      setUserData(data.user); // user data 설정\n      console.log(data); // console에 UserCredentialImpl 출력\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleGithubSignIn() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider).then(data => {\n      setUserData(data.user);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), error, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLogin,\n        children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGithubSignIn,\n        children: \"\\uAE43\\uD5C8\\uBE0C \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB85C\\uADF8\\uC778 \\uC720\\uC800: \", userData ? userData.displayName : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"ksy7cyt69iNkOob5778z2/KdvhI=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["GithubAuthProvider","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","React","useState","useNavigate","authService","jsxDEV","_jsxDEV","Auth","props","_s","navigate","email","setEmail","userData","setUserData","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","console","log","code","login","curUserInfo","setUser","user","err","setIsAppropriate","handleGoogleLogin","provider","then","catch","handleGithubSignIn","toggleAccount","prev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","displayName","_c","$RefreshReg$"],"sources":["/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js"],"sourcesContent":["import {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n} from \"firebase/auth\";\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\nimport \"./Login.css\";\n\nconst Auth = (props) => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      if (newAccount) {\n        let data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n        console.log(\"createUserWithEmailAndPassword성공!\");\n        console.log(data);\n      } else {\n        //newAccount가 아니라면 sigIn이 되어야할탠데..\n        console.log(\"signInWithEmailAndPassword성공!\");\n        data = await signInWithEmailAndPassword(authService, email, password);\n        console.log(data);\n      }\n    } catch (error) {\n      //에러처리\n      // eslint-disable-next-line default-case\n      switch (error.code) {\n        case \"auth/weak-password\":\n          setError(\"비밀번호는 6자리 이상이어야 합니다\");\n          break;\n        case \"auth/invalid-email\":\n          setError(\"잘못된 이메일 주소입니다\");\n          break;\n        case \"auth/email-already-in-use\":\n          setError(\"이미 가입되어 있는 계정입니다\");\n          break;\n      }\n    }\n  };\n\n  const login = async () => {\n    try {\n      const curUserInfo = await signInWithEmailAndPassword(\n        authService,\n        email,\n        password\n      );\n      // console.log(curUserInfo);\n      setUser(curUserInfo.user);\n    } catch (err) {\n      setIsAppropriate(false);\n      // console.log(err.code);\n      /*\n      입력한 아이디가 없을 경우 : auth/user-not-found.\n      비밀번호가 잘못된 경우 : auth/wrong-password.\n      */\n    }\n  };\n\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider) // 팝업창 띄워서 로그인\n      .then((data) => {\n        setUserData(data.user); // user data 설정\n        console.log(data); // console에 UserCredentialImpl 출력\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleGithubSignIn() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider)\n      .then((data) => {\n        setUserData(data.user);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <div className=\"about__container\">\n      <span onClick={toggleAccount}>회원가입</span>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <br></br>\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <br></br>\n        {error}\n        <br></br>\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n      </form>\n      <div>\n        <button onClick={handleGoogleLogin}>구글 로그인</button>\n        <button onClick={handleGithubSignIn}>깃허브 로그인</button>\n      </div>\n      <p>로그인 유저: {userData ? userData.displayName : null}</p>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}