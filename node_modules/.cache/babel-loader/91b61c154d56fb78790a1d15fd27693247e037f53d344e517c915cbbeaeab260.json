{"ast":null,"code":"var _jsxFileName = \"/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js\",\n  _s = $RefreshSig$();\nimport \"../fbase\";\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // 회원가입과 로그인을 하나의 form으로 관리\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async event => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Sign In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","authService","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","toggleAccount","prev","className","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js"],"sourcesContent":["import {} from \"../fbase\";\n\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // 회원가입과 로그인을 하나의 form으로 관리\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <div className=\"about__container\">\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n      <div>\n        <button>Continue with Google</button>\n        <button>Continue with Github</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}