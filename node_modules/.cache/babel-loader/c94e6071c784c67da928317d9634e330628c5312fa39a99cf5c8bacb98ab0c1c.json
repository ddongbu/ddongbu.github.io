{"ast":null,"code":"var _jsxFileName = \"/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js\",\n  _s = $RefreshSig$();\nimport { GithubAuthProvider, GoogleAuthProvider, browserSessionPersistence, createUserWithEmailAndPassword, setPersistence, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\nimport \"../style/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = props => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async event => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      if (newAccount) {\n        let data = await createUserWithEmailAndPassword(authService, email, password);\n        console.log(\"createUserWithEmailAndPassword성공!\");\n        console.log(data);\n      } else {\n        let data = await signInWithEmailAndPassword(authService, email, password);\n        setPersistence(authService, browserSessionPersistence);\n        console.log(\"signInWithEmailAndPassword성공!\");\n        setUserData(data.user);\n        console.log(data);\n      }\n    } catch (error) {\n      //에러처리\n      // eslint-disable-next-line default-case\n      switch (error.code) {\n        case \"auth/weak-password\":\n          setError(\"비밀번호는 6자리 이상이어야 합니다\");\n          break;\n        case \"auth/invalid-email\":\n          setError(\"잘못된 이메일 주소입니다\");\n          break;\n        case \"auth/email-already-in-use\":\n          setError(\"이미 가입되어 있는 계정입니다\");\n          break;\n      }\n    }\n  };\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider); // 팝업창 띄워서 로그인\n    setPersistence(authService, browserSessionPersistence).then(data => {\n      setUserData(data.user); // user data 설정\n      console.log(data); // console에 UserCredentialImpl 출력\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // 1.파이어베이스 저장 되어있는 정보를 기반으로 어떤페이지를 가도 유지시킬 수 있게끔.\n  // 2.공급업체 별 로그인정보 에러처리(선택)\n  // 3.화면 깔끔하게 - 디자인 - 참고 활용 -> (기능 고도화 or 페이지 추가)\n  // 4.1번의 완료후 개인정보를 활용  개인화된 정보를 유저별로 볼수있게끔 (장바구니 지원)\n  // 5.포트폴리오 < >\n  function handleGithubSignIn() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider);\n    setPersistence(authService, browserSessionPersistence).then(data => {\n      setUserData(data.user);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"show-signup\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: toggleAccount,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785/\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            required: true,\n            value: email,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            required: true,\n            value: password,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), error, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-element\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: newAccount ? \"Create Account\" : \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-element\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGoogleLogin,\n          children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGithubSignIn,\n        children: \"\\uAE43\\uD5C8\\uBE0C \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB85C\\uADF8\\uC778 \\uC720\\uC800: \", userData ? userData.displayName : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"ksy7cyt69iNkOob5778z2/KdvhI=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["GithubAuthProvider","GoogleAuthProvider","browserSessionPersistence","createUserWithEmailAndPassword","setPersistence","signInWithEmailAndPassword","signInWithPopup","React","useState","useNavigate","authService","jsxDEV","_jsxDEV","Auth","props","_s","navigate","email","setEmail","userData","setUserData","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","console","log","user","code","handleGoogleLogin","provider","then","catch","err","handleGithubSignIn","toggleAccount","prev","className","children","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","displayName","_c","$RefreshReg$"],"sources":["/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js"],"sourcesContent":["import {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  browserSessionPersistence,\n  createUserWithEmailAndPassword,\n  setPersistence,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\nimport \"../style/Login.css\";\n\nconst Auth = (props) => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      if (newAccount) {\n        let data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n        console.log(\"createUserWithEmailAndPassword성공!\");\n        console.log(data);\n      } else {\n        let data = await signInWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n        setPersistence(authService, browserSessionPersistence);\n        console.log(\"signInWithEmailAndPassword성공!\");\n        setUserData(data.user);\n        console.log(data);\n      }\n    } catch (error) {\n      //에러처리\n      // eslint-disable-next-line default-case\n      switch (error.code) {\n        case \"auth/weak-password\":\n          setError(\"비밀번호는 6자리 이상이어야 합니다\");\n          break;\n        case \"auth/invalid-email\":\n          setError(\"잘못된 이메일 주소입니다\");\n          break;\n        case \"auth/email-already-in-use\":\n          setError(\"이미 가입되어 있는 계정입니다\");\n          break;\n      }\n    }\n  };\n\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider); // 팝업창 띄워서 로그인\n    setPersistence(authService, browserSessionPersistence)\n      .then((data) => {\n        setUserData(data.user); // user data 설정\n        console.log(data); // console에 UserCredentialImpl 출력\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // 1.파이어베이스 저장 되어있는 정보를 기반으로 어떤페이지를 가도 유지시킬 수 있게끔.\n  // 2.공급업체 별 로그인정보 에러처리(선택)\n  // 3.화면 깔끔하게 - 디자인 - 참고 활용 -> (기능 고도화 or 페이지 추가)\n  // 4.1번의 완료후 개인정보를 활용  개인화된 정보를 유저별로 볼수있게끔 (장바구니 지원)\n  // 5.포트폴리오 < >\n  function handleGithubSignIn() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider);\n    setPersistence(authService, browserSessionPersistence)\n      .then((data) => {\n        setUserData(data.user);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <div className=\"form signup\">\n      <div class=\"form-header\">\n        <div class=\"show-signup\">\n          <p onClick={toggleAccount}>회원가입/로그인</p>\n        </div>\n      </div>\n      <div className=\"form-elements\">\n        <form onSubmit={onSubmit}>\n          <div className=\"form-element\">\n            <input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              required\n              value={email}\n              onChange={onChange}\n            />\n          </div>\n          <br></br>\n          <div className=\"form-element\">\n            <input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              value={password}\n              onChange={onChange}\n            />\n          </div>\n          <br></br>\n          {error}\n          <br></br>\n          <div className=\"form-element\">\n            <input\n              type=\"submit\"\n              value={newAccount ? \"Create Account\" : \"Sign In\"}\n            />\n          </div>\n        </form>\n        <div className=\"form-element\">\n          <button onClick={handleGoogleLogin}>구글 로그인</button>\n        </div>\n        <button onClick={handleGithubSignIn}>깃허브 로그인</button>\n        <p>로그인 유저: {userData ? userData.displayName : null}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}