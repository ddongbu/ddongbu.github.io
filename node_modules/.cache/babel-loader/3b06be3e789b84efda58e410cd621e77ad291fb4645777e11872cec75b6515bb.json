{"ast":null,"code":"var _jsxFileName = \"/Users/lennnnon/Develop/movie_app-main/src/routes/Login.js\",\n  _s = $RefreshSig$();\nimport { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About(props) {\n  _s();\n  const clientId = \"clientId\";\n  const redirectUrl = \"http://localhost:3000\";\n  const githubURL = `https://github.com/login/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUrl}`;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // 회원가입과 로그인을 하나의 form으로 관리\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async event => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Sign In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["authService","React","useState","jsxDEV","_jsxDEV","About","props","_s","clientId","redirectUrl","githubURL","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","toggleAccount","prev","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lennnnon/Develop/movie_app-main/src/routes/Login.js"],"sourcesContent":["import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nimport \"./Login.css\";\n\nfunction About(props) {\n  const clientId = \"clientId\";\n  const redirectUrl = \"http://localhost:3000\";\n  const githubURL = `https://github.com/login/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUrl}`;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // 회원가입과 로그인을 하나의 form으로 관리\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n      <div>\n        <button>Continue with Google</button>\n        <button>Continue with Github</button>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}