{"ast":null,"code":"var _jsxFileName = \"/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js\",\n  _s = $RefreshSig$();\nimport { GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport { authService } from \"../fbase\";\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  // 회원가입과 로그인을 하나의 form으로 관리\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async event => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n        console.log(\"createUserWithEmailAndPassword성공!\");\n      } else {\n        console.log(\"signInWithEmailAndPassword성공!\");\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n      console.log(createUserWithEmailAndPassword);\n    }\n  };\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(authService, provider).then(data => {\n      setUserData(data.user);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function GithubAuthProvider() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider).then(data => {\n      setUserData(data.user);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Sign In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLogin,\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: GithubAuthProvider,\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), userData ? userData.displayName : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"KbQJkeDOW1/Bo9QgxXrtgU99pus=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","authService","React","useState","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","userData","setUserData","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","console","log","message","handleGoogleLogin","provider","then","user","catch","err","GithubAuthProvider","toggleAccount","prev","className","children","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","displayName","_c","$RefreshReg$"],"sources":["/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js"],"sourcesContent":["import {\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport { authService } from \"../fbase\";\n\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  // 회원가입과 로그인을 하나의 form으로 관리\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n        console.log(\"createUserWithEmailAndPassword성공!\");\n      } else {\n        console.log(\"signInWithEmailAndPassword성공!\");\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n      console.log(createUserWithEmailAndPassword);\n    }\n  };\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(authService, provider)\n      .then((data) => {\n        setUserData(data.user);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function GithubAuthProvider() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider)\n      .then((data) => {\n        setUserData(data.user);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <div className=\"about__container\">\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n      <div>\n        <button onClick={handleGoogleLogin}>Continue with Google</button>\n        <button onClick={GithubAuthProvider}>Continue with Github</button>\n        {userData ? userData.displayName : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}