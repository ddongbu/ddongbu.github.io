{"ast":null,"code":"var _jsxFileName = \"/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js\",\n  _s = $RefreshSig$();\nimport { GithubAuthProvider, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = props => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async event => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n        console.log(\"createUserWithEmailAndPassword성공!\");\n        console.log(data);\n      } else {\n        console.log(\"signInWithEmailAndPassword성공!\");\n        data = await signInWithEmailAndPassword(authService, email, password);\n        console.log(data);\n      }\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n      console.log(createUserWithEmailAndPassword);\n    }\n  };\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider) // 팝업창 띄워서 로그인\n    .then(data => {\n      setUserData(data.user); // user data 설정\n      console.log(data); // console에 UserCredentialImpl 출력\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleGithubSignIn() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider).then(data => {\n      setUserData(data.user);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleLogin,\n        children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGithubSignIn,\n        children: \"\\uAE43\\uD5C8\\uBE0C \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB85C\\uADF8\\uC778 \\uC720\\uC800: \", userData ? userData.displayName : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"ksy7cyt69iNkOob5778z2/KdvhI=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["GithubAuthProvider","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","React","useState","useNavigate","authService","jsxDEV","_jsxDEV","Auth","props","_s","navigate","email","setEmail","userData","setUserData","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","console","log","message","handleGoogleLogin","provider","then","user","catch","err","handleGithubSignIn","toggleAccount","prev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","displayName","_c","$RefreshReg$"],"sources":["/Users/lennnnon/Develop/movie_app-main/src/routes/Auth.js"],"sourcesContent":["import {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n} from \"firebase/auth\";\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\nimport \"./Login.css\";\n\nconst Auth = (props) => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event; // 비구조화 할당\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault(); // submit 기본 동작(새로고침) 방지\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n        console.log(\"createUserWithEmailAndPassword성공!\");\n        console.log(data);\n      } else {\n        console.log(\"signInWithEmailAndPassword성공!\");\n        data = await signInWithEmailAndPassword(authService, email, password);\n        console.log(data);\n      }\n    } catch (error) {\n      setError(error.message); // 에러 메시지 출력\n      console.log(createUserWithEmailAndPassword);\n    }\n  };\n\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider) // 팝업창 띄워서 로그인\n      .then((data) => {\n        setUserData(data.user); // user data 설정\n        console.log(data); // console에 UserCredentialImpl 출력\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleGithubSignIn() {\n    const provider = new GithubAuthProvider();\n    signInWithPopup(authService, provider)\n      .then((data) => {\n        setUserData(data.user);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <div className=\"about__container\">\n      <span onClick={toggleAccount}>회원가입</span>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <div>\n        <button onClick={handleGoogleLogin}>구글 로그인</button>\n        <button onClick={handleGithubSignIn}>깃허브 로그인</button>\n      </div>\n      <p>로그인 유저: {userData ? userData.displayName : null}</p>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":";;AAAA,SACEA,kBAAkB,EAClBC,kBAAkB,EAClBC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,eAAe,QACV,eAAe;AAEtB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,UAAU;AACtC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMmB,QAAQ,GAAIC,KAAK,IAAK;IAC1B,MAAM;MACJC,MAAM,EAAE;QAAEC,IAAI;QAAEC;MAAM;IACxB,CAAC,GAAGH,KAAK,CAAC,CAAC;IACX,IAAIE,IAAI,KAAK,OAAO,EAAE;MACpBZ,QAAQ,CAACa,KAAK,CAAC;IACjB,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,EAAE;MAC9BR,WAAW,CAACS,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOJ,KAAK,IAAK;IAChCA,KAAK,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI;MACF,IAAIC,IAAI;MACR,IAAIX,UAAU,EAAE;QACdW,IAAI,GAAG,MAAM9B,8BAA8B,CACzCM,WAAW,EACXO,KAAK,EACLI,QACF,CAAC;QACDc,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChDD,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5CF,IAAI,GAAG,MAAM7B,0BAA0B,CAACK,WAAW,EAAEO,KAAK,EAAEI,QAAQ,CAAC;QACrEc,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC,CAAC,CAAC;MACzBF,OAAO,CAACC,GAAG,CAAChC,8BAA8B,CAAC;IAC7C;EACF,CAAC;EAED,SAASkC,iBAAiBA,CAAA,EAAG;IAC3B,MAAMC,QAAQ,GAAG,IAAIpC,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAC3CG,eAAe,CAACI,WAAW,EAAE6B,QAAQ,CAAC,CAAC;IAAA,CACpCC,IAAI,CAAEN,IAAI,IAAK;MACdd,WAAW,CAACc,IAAI,CAACO,IAAI,CAAC,CAAC,CAAC;MACxBN,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAK;MACdR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;IAClB,CAAC,CAAC;EACN;EAEA,SAASC,kBAAkBA,CAAA,EAAG;IAC5B,MAAML,QAAQ,GAAG,IAAIrC,kBAAkB,CAAC,CAAC;IACzCI,eAAe,CAACI,WAAW,EAAE6B,QAAQ,CAAC,CACnCC,IAAI,CAAEN,IAAI,IAAK;MACdd,WAAW,CAACc,IAAI,CAACO,IAAI,CAAC;MACtBN,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAK;MACdR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;IAClB,CAAC,CAAC;EACN;EAEA,MAAME,aAAa,GAAGA,CAAA,KAAMrB,aAAa,CAAEsB,IAAI,IAAK,CAACA,IAAI,CAAC;EAC1D,oBACElC,OAAA;IAAKmC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BpC,OAAA;MAAMqC,OAAO,EAAEJ,aAAc;MAAAG,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzCzC,OAAA;MAAMoB,QAAQ,EAAEA,QAAS;MAAAgB,QAAA,gBACvBpC,OAAA;QACEkB,IAAI,EAAC,OAAO;QACZwB,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,QAAQ;QACRzB,KAAK,EAAEd,KAAM;QACbU,QAAQ,EAAEA;MAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFzC,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfwB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,QAAQ;QACRzB,KAAK,EAAEV,QAAS;QAChBM,QAAQ,EAAEA;MAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFzC,OAAA;QACE0C,IAAI,EAAC,QAAQ;QACbvB,KAAK,EAAER,UAAU,GAAG,gBAAgB,GAAG;MAAU;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,EACD5B,KAAK;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACPzC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAQqC,OAAO,EAAEX,iBAAkB;QAAAU,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnDzC,OAAA;QAAQqC,OAAO,EAAEL,kBAAmB;QAAAI,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNzC,OAAA;MAAAoC,QAAA,GAAG,mCAAQ,EAAC7B,QAAQ,GAAGA,QAAQ,CAACsC,WAAW,GAAG,IAAI;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACtC,EAAA,CApGIF,IAAI;EAAA,QACSJ,WAAW;AAAA;AAAAiD,EAAA,GADxB7C,IAAI;AAsGV,eAAeA,IAAI;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}